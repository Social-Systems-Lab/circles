version: "3.8"

services:
    db:
        image: mongo:latest
        env_file:
            - .env
        environment:
            - MONGO_INITDB_DATABASE=circles
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
        ports:
            - "${MONGO_PORT}:${MONGO_PORT}"
        volumes:
            - db:/data/db
        restart: always
        networks:
            - webnet

    minio:
        image: minio/minio
        env_file:
            - .env
        environment:
            MINIO_ROOT_USER: ${MINIO_ROOT_USERNAME}
            MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
        command: server /data --console-address :9001
        ports:
            - "${MINIO_PORT}:${MINIO_PORT}"
            - "9001:9001"
        volumes:
            - storage:/data
        networks:
            - webnet

    weaviate:
        command:
            - --host
            - 0.0.0.0
            - --port
            - "8080"
            - --scheme
            - http
        image: cr.weaviate.io/semitechnologies/weaviate:1.26.4
        ports:
            - 8080:8080
            - 50051:50051
        volumes:
            - weaviate_data:/var/lib/weaviate
        restart: on-failure:0
        environment:
            QUERY_DEFAULTS_LIMIT: 25
            AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: "true"
            PERSISTENCE_DATA_PATH: "/var/lib/weaviate"
            DEFAULT_VECTORIZER_MODULE: "text2vec-openai"
            ENABLE_MODULES: "text2vec-openai,generative-openai"
            CLUSTER_HOSTNAME: "node1"

    nginx:
        image: nginx:latest
        env_file:
            - .env
        volumes:
            - ./nginx.conf.local:/etc/nginx/nginx.conf:ro
        ports:
            - "80:80"
        networks:
            - webnet
        extra_hosts:
            - "host.docker.internal:host-gateway"
        depends_on:
            - minio

volumes:
    db:
    storage:
    weaviate_data:

networks:
    webnet:
