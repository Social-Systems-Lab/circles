version: "3.8"

services:
    circles:
        image: sslorg/circles:latest
        ports:
            - "${CIRCLES_PORT}:${CIRCLES_PORT}"
        env_file:
            - .env
        environment:
            - PORT=${CIRCLES_PORT}
            - NODE_ENV=${CIRCLES_NODE_ENV}
            - CIRCLES_JWT_SECRET=${CIRCLES_JWT_SECRET}
            - MONGO_HOST=db
            - MONGO_PORT=${MONGO_PORT}
            - MONGO_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
            - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
            - MINIO_HOST=minio
            - MINIO_PORT=${MINIO_PORT}
            - MINIO_ROOT_USERNAME=${MINIO_ROOT_USERNAME}
            - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
            - CIRCLES_REGISTRY_URL=${CIRCLES_REGISTRY_URL}
        volumes:
            - circles:/circles
        depends_on:
            - db
            - minio
        networks:
            - webnet

    db:
        image: mongo:latest
        env_file:
            - .env
        environment:
            - MONGO_INITDB_DATABASE=circles
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
        ports:
            - "${MONGO_PORT}:${MONGO_PORT}"
        volumes:
            - db:/data/db
        restart: always
        networks:
            - webnet

    minio:
        image: minio/minio
        env_file:
            - .env
        environment:
            MINIO_ROOT_USER: ${MINIO_ROOT_USERNAME}
            MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
        command: server /data --console-address :9001
        ports:
            - "${MINIO_PORT}:${MINIO_PORT}"
            - "9001:9001"
        volumes:
            - storage:/data
        networks:
            - webnet

    nginx:
        image: nginx:latest
        env_file:
            - .env
        volumes:
            - ./nginx.conf.template:/etc/nginx/nginx.conf.template:ro
            - ./docker-entrypoint.sh:/docker-entrypoint.sh:ro
        ports:
            - "80:80"
        networks:
            - webnet
        command: ["/bin/sh", "-c", "/docker-entrypoint.sh && nginx -g 'daemon off;'"]

    watchtower:
        image: containrrr/watchtower
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        restart: always
        environment:
            WATCHTOWER_POLL_INTERVAL: 60 # Check for updates every minute

volumes:
    db:
    circles:
    storage:

networks:
    webnet:
